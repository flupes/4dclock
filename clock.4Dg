#platform "Gen4-uLCD-32DT"

#inherit "4DGL_16bitColours.fnc"

#inherit "VisualConst.inc"

#inherit "clockConst.inc"

#inherit "clockPinout.inc"
#inherit "display.inc"
#inherit "DS3234.inc"

var g_hours := 0;
var g_minutes := 0;
var g_seconds := 0;
var g_update_h := 1;
var g_update_m := 1;
var g_update_s := 1;

func TickSeconds()
    g_seconds++;
    g_update_s := 1;
    if ( g_seconds > 59 )
        g_seconds := 0;
        g_minutes++;
        //g_update_m := 1;
    endif
    if ( g_minutes > 59 )
        g_minutes := 0;
        g_hours++;
        //g_update_h := 1;
    endif
    if ( g_hours > 23 )
        g_hours := 0;
    endif
    sys_SetTimer(TIMER1, 100);
endfunc


func CheckButton(var buttonPin)
    var private pressed_count[2] := [0, 0];
    var private pressed_state[2] := [0, 0];
    var index := 0;
    var pressed := 0;
    if ( buttonPin != PIN_QENC_PUSH )
        index := 1;
    endif
    if ( pin_Read(buttonPin) == 0 )
        pressed_count[index]++;
    else
        if ( pressed_count[index] > 1 )
            pressed_count[index]--;
        else
            pressed_state[index] := 0;
        endif
    endif
    if (pressed_state[index] == 0 && pressed_count[index] > 6)
        pressed_state[index] := 1;
        pressed := 1;
    endif
    return (pressed);
endfunc



func main()

    gfx_Set(SCREEN_MODE,LANDSCAPE) ;

    if ( ConfigurePins() > 0 )
        print("Error while configuring the board!");
        repeat forever
    endif

    if ( DS3234_Init() > 0 )
        print("Failed to initialize DS3234!");
        repeat forever
    endif

    if (!(file_Mount()))
        while(!(file_Mount()))
            putstr("Drive not mounted...");
            pause(2000);
            gfx_Cls();
            pause(200);
        wend
    endif

    LoadResources();

    gfx_CircleFilled(160, 72, 8, GRAY) ;
    gfx_CircleFilled(160, 108, 8, GRAY) ;

    touch_Set(TOUCH_ENABLE);
    var brightness := 8;
    var x, y, pressed;
    var qenc_delta := 0;
    var counter := 120;
    ledDigitsDisplay(counter/4, iiseconds, 124, 2, 1, 36, 0);

    gfx_Contrast(brightness);
    //sys_SetTimerEvent(TIMER1, TickSeconds);
    //TickSeconds();

    Qencoder1Reset();

    repeat
        DS3234_Read();
        UpdateDate(g_ds_year, g_ds_month, g_ds_date, g_ds_day);
        UpdateTime(g_ds_hours, g_ds_minutes, g_ds_seconds);

        qenc_delta :=  peekW(QEN1_DELTA);
        // quadrature encoder adds 4 ticks for one step: total value/4 is what we want at the end
        if ( qenc_delta != 0 )
            //txt_FontID(FONT_5);
            //putstrXY(8, 160, "     ");
            //putstrXY(8, 180, "     ");
            //putnumXY(8, 160, DEC, counter);
            //putnumXY(8, 180, DEC, qenc_delta);
            counter += qenc_delta;
            if (counter > 240)
                counter -= 240;
            endif
            if (counter < 0)
                counter += 240;
            endif
            // ledDigitsDisplay(counter/4, iiseconds, 124, 2, 1, 36, 0);
        endif

        if (touch_Get(TOUCH_STATUS) == TOUCH_RELEASED)
            x := touch_Get(TOUCH_GETX);
            y := touch_Get(TOUCH_GETY);
            if ( y > 120 & y < 220 )
                if ( x < 100 )
                    brightness -= 2;
                    if ( brightness < 2 )
                        brightness := 2;
                    endif
                endif
                if ( x > 220 )
                    brightness += 2;
                    if ( brightness > 14 )
                        brightness := 14;
                    endif
                endif
                gfx_Contrast(brightness);
            endif
        endif
    forever

endfunc

/*
        if (g_update_h)
            ledDigitsDisplay(g_hours, iihours, 5, 2, 1, 72, 1) ;
            g_update_h := 0;
        endif
        if (g_update_m)
            ledDigitsDisplay(g_minutes, iiminutes, 173, 2, 1, 72, 0) ;
            g_update_m := 0;
        endif
        if (0 && g_update_s)
            ledDigitsDisplay(g_seconds, iiseconds, 124, 2, 1, 36, 0) ;
            g_update_s := 0;
        endif
        pressed := CheckButton(PIN_QENC_PUSH);
        if ( pressed )
            counter := 0;
            ledDigitsDisplay(counter/4, iiseconds, 124, 2, 1, 36, 0);
        endif
*/

